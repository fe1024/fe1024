import{m as i,n as p,K as m,L as _,M as h,B as P,r as v,u as L,N as u,O as b,P as k,Q as x,x as l,T as S,R as d,S as g,U as R,V as B,W as T,X as j,_ as O,Y as A,o as N,w,Z as C}from"./sWd-NsD_.js";const H=i({name:"LayoutLoader",inheritAttrs:!1,props:{name:String,layoutProps:Object},async setup(e,o){const t=await u[e.name]().then(a=>a.default||a);return()=>l(t,e.layoutProps,o.slots)}}),E=i({name:"NuxtLayout",inheritAttrs:!1,props:{name:{type:[String,Boolean,Object],default:null},fallback:{type:[String,Object],default:null}},setup(e,o){const t=p(),a=m(x),n=a===_()?h():a,r=P(()=>{let s=d(e.name)??n.meta.layout??"default";return s&&!(s in u)&&e.fallback&&(s=d(e.fallback)),s}),c=v();o.expose({layoutRef:c});const f=t.deferHydration();if(t.isHydrating){const s=t.hooks.hookOnce("app:error",f);L().beforeEach(s)}return()=>{const s=r.value&&r.value in u,y=n.meta.layoutTransition??b;return k(S,s&&y,{default:()=>l(B,{suspensible:!0,onResolve:()=>{R(f)}},{default:()=>l(M,{layoutProps:g(o.attrs,{ref:c}),key:r.value||void 0,name:r.value,shouldProvide:!e.name,hasTransition:!!y},o.slots)})}).default()}}}),M=i({name:"NuxtLayoutProvider",inheritAttrs:!1,props:{name:{type:[String,Boolean]},layoutProps:{type:Object},hasTransition:{type:Boolean},shouldProvide:{type:Boolean}},setup(e,o){const t=e.name;return e.shouldProvide&&T(j,{isCurrent:a=>t===(a.meta.layout??"default")}),()=>{var a,n;return!t||typeof t=="string"&&!(t in u)?(n=(a=o.slots).default)==null?void 0:n.call(a):l(H,{key:t,layoutProps:e.layoutProps,name:t},o.slots)}}}),$={};function I(e,o){const t=E;return N(),A(t,null,{default:w(()=>[C(e.$slots,"default")]),_:3})}const Q=O($,[["render",I]]);export{Q as default};
